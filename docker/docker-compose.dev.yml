volumes:
  minio_storage:

services:
  wiremock:
    image: wiremock/wiremock:3.3.1
    ports:
      - "8081:8080"
    volumes:
      - ./wiremock:/home/wiremock
    command:
      - --global-response-templating
      - --verbose

  api:
    image: ghcr.io/ministryofjustice/migration-link-exchange-api:local
    build:
      target: development
    command: gradle --parallel --build-cache --configuration-cache bootRun
    depends_on:
      wiremock:
        condition: service_started
      minio:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    ports:
      - "5005:5005"
    environment:
      S3_BUCKET: dev-bucket
      S3_REGION: "us-east-1"
      MINIO_USER: minio-user
      MINIO_PASSWORD: minio-pass
      MINIO_ENDPOINT: http://minio:9000
      # SKIP_IMPORT: "true"
    volumes:
      - ..:/app
      - ~/.gradle:/home/gradle/.gradle

  minio:
    image: minio/minio
    ports:
      - "9000:9000" # The AWS S3 compatible API.
      - "9001:9001" # The Minio web console.
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio-user
      MINIO_ROOT_PASSWORD: minio-pass
    command: server --console-address ":9001" /data
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 2

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: |
      /bin/sh -c "
        mc config host add dataset http://minio:9000 minio-user minio-pass
        mc mb dataset/dev-bucket --ignore-existing
        mc anonymous set download dataset/dev-bucket;
        while ! mc ls dataset/dev-bucket; do
          echo 'Waiting for bucket to be created...'
          sleep 1
        done
        exit 0
      "
